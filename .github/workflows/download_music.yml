name: 📥 On-Demand Music Downloader (按需音乐下载器)

# 允许手动或通过 API 触发工作流
on:
  workflow_dispatch:
    inputs:
      search_query:
        description: '要搜索并下载的歌曲关键词（例如: 唯一 邓紫棋）'
        required: true
        type: string

jobs:
  download_and_commit:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ 检出代码 (Checkout Repository)
        uses: actions/checkout@v4
        # 必须使用 fetch-depth: 0 才能在后续步骤中推送代码
        with:
          fetch-depth: 0 

      - name: 🐍 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' 

      - name: 📦 安装依赖 (requests, bs4, pathlib)
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 
          # 安装 lxml 解析器以提高性能
          pip install lxml

      # ------------------------------------------------------------------
      # FFmpeg 安装 (重要: 用于 AAC 转 MP3)
      # ------------------------------------------------------------------
      - name: 🛠️ 安装 FFmpeg (如果需要 AAC 转换)
        run: sudo apt-get install ffmpeg -y
        
      # ------------------------------------------------------------------
      # 执行 Python 脚本
      # ------------------------------------------------------------------
      - name: 🚀 执行下载脚本并下载第一首歌
        # 使用输入的关键词作为脚本的命令行参数
        run: python download_music.py "${{ github.event.inputs.search_query }}"
        # 忽略脚本执行失败，以便下一步检查是否有新文件
        continue-on-error: true

      # ------------------------------------------------------------------
      # 检查变动并推送 (关键步骤)
      # ------------------------------------------------------------------
      - name: 🔍 检查文件变动
        id: git_status
        run: |
          # 检查 downloads 文件夹是否有新增或修改的文件
          if [[ $(git status --porcelain downloads) ]]; then
            echo "::set-output name=files_changed::true"
          else
            echo "::set-output name=files_changed::false"
          fi

      - name: ⏫ 提交并推送新文件到仓库
        if: steps.git_status.outputs.files_changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'feat(download): 自动下载歌曲: ${{ github.event.inputs.search_query }}'
          # 仅推送 downloads 目录下的文件
          commit_options: '--no-verify --quiet --allow-empty' 
          file_pattern: 'downloads/*'
          # GitHub Token 默认是可用的
          branch: main # 替换为您的主分支名称
